# Makefile.in generated by automake 1.6.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#  This file is part of cqual.
#  Copyright (C) 2000-2002 The Regents of the University of California.
#
# cqual is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# cqual is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cqual; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/cqual
pkglibdir = $(libdir)/cqual
pkgincludedir = $(includedir)/cqual
top_builddir = ..

ACLOCAL = aclocal-1.7
AUTOCONF = autoconf
AUTOMAKE = automake-1.7
AUTOHEADER = autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = tar
AWK = awk
CC = gcc
CXX = @CXX@
CYGPATH_W = echo
DEPDIR = .deps
EMACS = emacs
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
PACKAGE = cqual
RANLIB = ranlib
STRIP = 
VERSION = 0.981
YACC = bison -y
am__include = include
am__leading_dot = .
am__quote = 
install_sh = /Users/ashwinraghav/cqual-0.981/inst/install-sh
lispdir = ${datadir}/emacs/site-lisp

regiondir = libcompat
regionflags = -Ddeletes= -Dtraditional= -Dsameregion= -Dparentptr=
CFLAGS = -O3
cflags = 

SUBDIRS = $(regiondir)

INCLUDES = $(regionflags) $(cflags) -I$(srcdir)/$(regiondir)

libregions = $(regiondir)/libregions.a

bin_PROGRAMS = cqual iquals

parser_core = \
	AST.h			\
	AST.c			\
	AST_types.h		\
	AST_defs.h		\
	AST_utils.h		\
	AST_utils.c		\
	array.c			\
	array.h			\
	bool.h			\
	buffer.h 		\
	buffer.c 		\
	builtins.h 		\
	builtins.c		\
	c-lex.h			\
	c-lex.c			\
	c-parse.h		\
	c-parse.tab.h		\
	c-parse.tab.c 		\
	c-gperf.h 		\
	compiler.h		\
	config.h 		\
	constants.h 		\
	constants.c		\
	containers.h 		\
	cqual.h 		\
	cstring.h 		\
	cval.h 			\
	cval.c 			\
	dd_list.h		\
	dd_list.c 		\
	decls.h 		\
	env.h 			\
	env.c			\
	errors.h		\
	errors.c 		\
	expr.h			\
	expr.c 			\
	flags.h 		\
	hash.h 			\
	hash.c			\
	input.h 		\
	input.c 		\
	linkage.h 		\
	location.h 		\
	location.c		\
	mbchar.h		\
	mbchar.c		\
	parser.h		\
	qualifiers.h		\
	semantics.h		\
	semantics.c		\
	stmt.h			\
	stmt.c			\
	types.h			\
	types.c			\
	unparse.h		\
	unparse.c		\
	utils.h			\
	utils.c


cqual_SOURCES = \
	$(parser_core)		\
	analyze.h		\
	analyze.c		\
	bitset.h		\
	bitset.c		\
	color.h			\
	effect.h 		\
	effect.c 		\
	eq_expressions.c	\
	flow.h 			\
	flow.c 			\
	lattice-lex.c		\
	lattice-parse.tab.h	\
	lattice-parse.tab.c	\
	main.c 			\
	pam.h 			\
	pam.c			\
	qerror.h		\
	qerror.c		\
	qtype.h			\
	qtype.c			\
	quals.h			\
	quals.c			\
	set.h			\
	set.c			\
	timer.h			\
	timer.c			\
	usage.h			\
	usage.c


iquals_SOURCES = \
	bitset.h		\
	bitset.c		\
	buffer.h		\
	buffer.c		\
	dd_list.h		\
	dd_list.c		\
	hash.h			\
	hash.c			\
	iquals-lex.c		\
	iquals.tab.c		\
	iquals.tab.h		\
	lattice-lex.c		\
	lattice-parse.tab.h	\
	lattice-parse.tab.c	\
	linkage.h		\
	quals.h			\
	quals.c			\
	qerror.h		\
	qerror.c		\
	set.h			\
	set.c			\
	utils.h			\
	utils.c


LDADD = $(libregions) 

BUILT_SOURCES = \
	AST_defs.c		\
	AST_defs.h		\
	AST_parent.c		\
	AST_print.c		\
	AST_types.h		\
	c-gperf.h		\
	c-parse.tab.h		\
	c-parse.tab.c		\
	containers.h		\
	lattice-parse.tab.c	\
	lattice-parse.tab.h	\
	lattice-lex.c		\
	iquals-lex.c		\
	iquals.tab.c		\
	iquals.tab.h


EXTRA_DIST = \
	build-basics.el 	\
	build-parent.el		\
	build-print.el		\
	build-types.el		\
	build-containers.el	\
	c-parse.gperf		\
	c-parse.y		\
	containers.def		\
	iquals.l		\
	iquals.y		\
	lattice-parse.y		\
	lattice-parse.l		\
	nodetypes.def

subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/inst/mkinstalldirs
CONFIG_CLEAN_FILES =
bin_PROGRAMS = cqual$(EXEEXT) iquals$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am__objects_1 = AST.$(OBJEXT) AST_utils.$(OBJEXT) array.$(OBJEXT) \
	buffer.$(OBJEXT) builtins.$(OBJEXT) c-lex.$(OBJEXT) \
	c-parse.tab.$(OBJEXT) constants.$(OBJEXT) cval.$(OBJEXT) \
	dd_list.$(OBJEXT) env.$(OBJEXT) errors.$(OBJEXT) expr.$(OBJEXT) \
	hash.$(OBJEXT) input.$(OBJEXT) location.$(OBJEXT) \
	mbchar.$(OBJEXT) semantics.$(OBJEXT) stmt.$(OBJEXT) \
	types.$(OBJEXT) unparse.$(OBJEXT) utils.$(OBJEXT)
am_cqual_OBJECTS = $(am__objects_1) analyze.$(OBJEXT) bitset.$(OBJEXT) \
	effect.$(OBJEXT) eq_expressions.$(OBJEXT) flow.$(OBJEXT) \
	lattice-lex.$(OBJEXT) lattice-parse.tab.$(OBJEXT) \
	main.$(OBJEXT) pam.$(OBJEXT) qerror.$(OBJEXT) qtype.$(OBJEXT) \
	quals.$(OBJEXT) set.$(OBJEXT) timer.$(OBJEXT) usage.$(OBJEXT)
cqual_OBJECTS = $(am_cqual_OBJECTS)
cqual_LDADD = $(LDADD)
cqual_DEPENDENCIES = $(regiondir)/libregions.a 
cqual_LDFLAGS =
am_iquals_OBJECTS = bitset.$(OBJEXT) buffer.$(OBJEXT) dd_list.$(OBJEXT) \
	hash.$(OBJEXT) iquals-lex.$(OBJEXT) iquals.tab.$(OBJEXT) \
	lattice-lex.$(OBJEXT) lattice-parse.tab.$(OBJEXT) \
	quals.$(OBJEXT) qerror.$(OBJEXT) set.$(OBJEXT) utils.$(OBJEXT)
iquals_OBJECTS = $(am_iquals_OBJECTS)
iquals_LDADD = $(LDADD)
iquals_DEPENDENCIES = $(regiondir)/libregions.a 
iquals_LDFLAGS =

DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"cqual\" -DVERSION=\"0.981\" -DYYTEXT_POINTER=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_FCNTL_H=1 -DHAVE_LIMITS_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DTIME_WITH_SYS_TIME=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DPROTOTYPES=1 -D__PROTOTYPES=1 -DRETSIGTYPE=void -DHAVE_VPRINTF=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_STRDUP=1 -DHAVE_STRTOL=1 
DEFAULT_INCLUDES =  -I. -I$(srcdir)
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/inst/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = $(DEPDIR)/alloca.Po ./$(DEPDIR)/AST.Po \
	./$(DEPDIR)/AST_utils.Po ./$(DEPDIR)/analyze.Po \
	./$(DEPDIR)/array.Po ./$(DEPDIR)/bitset.Po \
	./$(DEPDIR)/buffer.Po ./$(DEPDIR)/builtins.Po \
	./$(DEPDIR)/c-lex.Po ./$(DEPDIR)/c-parse.tab.Po \
	./$(DEPDIR)/constants.Po ./$(DEPDIR)/cval.Po \
	./$(DEPDIR)/dd_list.Po ./$(DEPDIR)/effect.Po \
	./$(DEPDIR)/env.Po ./$(DEPDIR)/eq_expressions.Po \
	./$(DEPDIR)/errors.Po ./$(DEPDIR)/expr.Po \
	./$(DEPDIR)/flow.Po ./$(DEPDIR)/hash.Po \
	./$(DEPDIR)/input.Po ./$(DEPDIR)/iquals-lex.Po \
	./$(DEPDIR)/iquals.tab.Po \
	./$(DEPDIR)/lattice-lex.Po \
	./$(DEPDIR)/lattice-parse.tab.Po \
	./$(DEPDIR)/location.Po ./$(DEPDIR)/main.Po \
	./$(DEPDIR)/mbchar.Po ./$(DEPDIR)/pam.Po \
	./$(DEPDIR)/qerror.Po ./$(DEPDIR)/qtype.Po \
	./$(DEPDIR)/quals.Po ./$(DEPDIR)/semantics.Po \
	./$(DEPDIR)/set.Po ./$(DEPDIR)/stmt.Po \
	./$(DEPDIR)/timer.Po ./$(DEPDIR)/types.Po \
	./$(DEPDIR)/unparse.Po ./$(DEPDIR)/usage.Po \
	./$(DEPDIR)/utils.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(cqual_SOURCES) $(iquals_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in alloca.c
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(cqual_SOURCES) $(iquals_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
cqual$(EXEEXT): $(cqual_OBJECTS) $(cqual_DEPENDENCIES) 
	@rm -f cqual$(EXEEXT)
	$(LINK) $(cqual_LDFLAGS) $(cqual_OBJECTS) $(cqual_LDADD) $(LIBS)
iquals$(EXEEXT): $(iquals_OBJECTS) $(iquals_DEPENDENCIES) 
	@rm -f iquals$(EXEEXT)
	$(LINK) $(iquals_LDFLAGS) $(iquals_OBJECTS) $(iquals_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include $(DEPDIR)/alloca.Po
include ./$(DEPDIR)/AST.Po
include ./$(DEPDIR)/AST_utils.Po
include ./$(DEPDIR)/analyze.Po
include ./$(DEPDIR)/array.Po
include ./$(DEPDIR)/bitset.Po
include ./$(DEPDIR)/buffer.Po
include ./$(DEPDIR)/builtins.Po
include ./$(DEPDIR)/c-lex.Po
include ./$(DEPDIR)/c-parse.tab.Po
include ./$(DEPDIR)/constants.Po
include ./$(DEPDIR)/cval.Po
include ./$(DEPDIR)/dd_list.Po
include ./$(DEPDIR)/effect.Po
include ./$(DEPDIR)/env.Po
include ./$(DEPDIR)/eq_expressions.Po
include ./$(DEPDIR)/errors.Po
include ./$(DEPDIR)/expr.Po
include ./$(DEPDIR)/flow.Po
include ./$(DEPDIR)/hash.Po
include ./$(DEPDIR)/input.Po
include ./$(DEPDIR)/iquals-lex.Po
include ./$(DEPDIR)/iquals.tab.Po
include ./$(DEPDIR)/lattice-lex.Po
include ./$(DEPDIR)/lattice-parse.tab.Po
include ./$(DEPDIR)/location.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mbchar.Po
include ./$(DEPDIR)/pam.Po
include ./$(DEPDIR)/qerror.Po
include ./$(DEPDIR)/qtype.Po
include ./$(DEPDIR)/quals.Po
include ./$(DEPDIR)/semantics.Po
include ./$(DEPDIR)/set.Po
include ./$(DEPDIR)/stmt.Po
include ./$(DEPDIR)/timer.Po
include ./$(DEPDIR)/types.Po
include ./$(DEPDIR)/unparse.Po
include ./$(DEPDIR)/usage.Po
include ./$(DEPDIR)/utils.Po

distclean-depend:
	-rm -rf $(DEPDIR) ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = depmode=gcc3
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-recursive distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive


$(srcdir)/c-parse.tab.c $(srcdir)/c-parse.tab.h: c-parse.y
	bison -d $<

$(srcdir)/AST_defs.c $(srcdir)/AST_defs.h $(srcdir)/AST_types.h: nodetypes.def build-types.el build-basics.el
	cd $(srcdir) && emacs -batch -load build-types.el

$(srcdir)/AST_parent.c: nodetypes.def build-parent.el build-basics.el
	cd $(srcdir) && emacs -batch -load build-parent.el

$(srcdir)/AST_print.c: nodetypes.def build-print.el build-basics.el
	cd $(srcdir) && emacs -batch -load build-print.el

$(srcdir)/containers.h: containers.def build-containers.el
	cd $(srcdir) && emacs -batch -load build-containers.el

$(srcdir)/lattice-parse.tab.c $(srcdir)/lattice-parse.tab.h: lattice-parse.y
	bison -d -plyy lattice-parse.y

$(srcdir)/lattice-lex.c: lattice-parse.tab.h lattice-parse.l
	$(LEX) -olattice-lex.c -Plyy lattice-parse.l

$(srcdir)/iquals.tab.c $(srcdir)/iquals.tab.h: iquals.y
	bison -d iquals.y

$(srcdir)/iquals-lex.c: $(srcdir)/iquals.tab.h iquals.l
	$(LEX) -oiquals-lex.c iquals.l

$(srcdir)/c-gperf.h: c-parse.gperf qualifiers.h
	cd $(srcdir) && m4 c-parse.gperf | grep -v '^$$' | \
	gperf -p -j1 -i 1 -g -o -t -G -N is_reserved_word -k1,3,$$ >$@.
	mv $@. $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
